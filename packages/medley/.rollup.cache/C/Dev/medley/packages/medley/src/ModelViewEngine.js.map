{"version":3,"file":"ModelViewEngine.js","sourceRoot":"","sources":["ModelViewEngine.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,UAAU,EAAE,MAAM,QAAQ,CAAC;AAEpC,MAAM,OAAO,eAAe;IAG1B,YAAY,eAAsC;QAChD,MAAM,QAAQ,GAAG,eAAe,CAAC,eAAe,CAAC,YAAY,CAAC;QAC9D,MAAM,eAAe,GAAG,eAAe,CAAC,cAAc,CAAC,eAAe,CAAC;QACvE,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAC9B,QAAQ,EACR,eAAe,CAChB,CAAC;IACJ,CAAC;IAEY,WAAW,CAAI,OAAe,EAAE,IAAW;;YACtD,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAI,OAAO,EAAE,IAAI,CAAC,CAAC;QACvD,CAAC;KAAA;CACF","sourcesContent":["import { CompositionRepository } from \"./CompositionRepository\";\nimport { ViewEngine } from \"./Core\";\n\nexport class ModelViewEngine {\n  private viewEngine: ViewEngine;\n\n  constructor(compositionRepo: CompositionRepository) {\n    const getModel = compositionRepo.modelRepository.getModelById;\n    const getViewFunction = compositionRepo.typeRepository.getViewFunction;\n    this.viewEngine = new ViewEngine(\n      getModel,\n      getViewFunction,\n    );\n  }\n\n  public async renderModel<T>(modelId: string, args: any[]): Promise<T> {\n    return this.viewEngine.renderModel<T>(modelId, args);\n  }\n}\n"]}